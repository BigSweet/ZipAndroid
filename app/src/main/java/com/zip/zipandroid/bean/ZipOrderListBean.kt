package com.zip.zipandroid.bean

import android.os.Parcelable
import kotlinx.android.parcel.Parcelize

class ZipOrderListBean : ArrayList<ZipOrderListBeanItem>()

@Parcelize
data class ZipOrderListBeanItem(
    val allAmountDue: String,
    val amountDue: String,
    val applyAmount: String,
    val applyPeriod: String,
    val applyPeriodNew: String,
    val applyTime: Long,
    val approveOpinion: String,
    val approveTime: Long,
    val bankId: String,
    val bankName: String,
    val bizId: String,
    val capital: String,
    val cardNo: String,
    val cardType: String,
    val collectorName: String,
    val count: Int,
    val couponAmount: String,
    val creditNo: String,
    val custId: String,
    val custName: String,
    val extendStatus: Int,
    val factCapital: String,
    val factFine: String,
    val factInterest: String,
    val factOtherTotalFee: String,
    val factOverdueFee: String,
    val fees: ArrayList<Int>,
    val hairCutAmount: String,
    val ifscCode: String,
    val interest: String,
    val interestTime: String,
    val isLoan: String,
    val lid: Long,
    val loanAmount: String,
    val loanCancelStatus: String,
    val loanRefusedDuration: String,
    val mid: String,
    val noPayStages: String,
    val otherFee: Int,
    val overdueDays: Int,
    val penalty: String,
    val period: Int,
    val periodTime: Long,
    val periodTimeStr: String,
    val phoneNum: String,
    val productType: String,
    val rate: String,
    val releaseTime: String,
    val repaymentResponseList: List<RepaymentResponse>,
    val shouldCapital: String,
    val shouldFine: String,
    val shouldInterest: String,
    val shouldOtherTotalFee: String,
    val shouldOverdueFee: String,
    val stageCount: Int,
    val status: String,
    val subtractCapital: String,
    val subtractFine: String,
    val subtractInterest: String,
    val subtractOtherTotalFee: String,
    val subtractOverdueFee: String,
    val totalIVA: String,
    val totalInterestReal: String,
    val updateTime: Long,
    val userConfirmStatus: Int,
    val waitRepayStatus: String
):Parcelable


@Parcelize
data class RepaymentResponse(
    val allAmountDue: Int,
    val amountDue: Double,
    val applyAmount: Double,
    val bizId: String,
    val capital: Double,
    val collectorName: String,
    val couponAmount: Double,
    val extendsShouldAmount: Int,
    val factCapital: Double,
    val factFine: Double,
    val factInterest: Double,
    val factOtherTotalFee: Double,
    val factOverdueFee: Double,
    val fees: ArrayList<Int>,
    val hairCutAmount: Int,
    val interest: Double,
    val isExtends: Int,
    val lid: Long,
    val loanAmount: Double,
    val noPayStages: String,
    val otherFee: Int,
    val overdueDays: Int,
    val penalty: Double,
    val period: Int,
    val periodTime: Long,
    val rate: Int,
    val releaseTime: String,
    val shouldCapital: Double,
    val shouldFine: Double,
    val shouldInterest: Double,
    val shouldOtherTotalFee: Double,
    val shouldOverdueFee: Double,
    val shouldTotal: Double,
    val status: String,
    val subtractCapital: Double,
    val subtractFine: Double,
    val subtractInterest: Double,
    val subtractOtherTotalFee: Double,
    val subtractOverdueFee: Double,
    val totalIVA: Int,
    val totalIndex: String,
    val totalInterestReal: Int
):Parcelable